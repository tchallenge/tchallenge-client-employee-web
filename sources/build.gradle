import java.time.Instant

buildscript {

    repositories {

        jcenter()
    }

    dependencies {

        // @formatter:off (required to keep the list of dependencies as a table)

        classpath group: 'org.springframework.boot',    name: 'spring-boot-gradle-plugin',  version: '1.5.6.RELEASE'

        // @formatter:on
    }
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

group 'ru.tchallenge.client.employee.web'
version '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

bootRun {

    addResources = true
    systemProperties = System.properties as Map<String, ?>
}

task createProperties(dependsOn: processResources) {

    doLast {

        def buildProperties = new File("${buildDir}/resources/main/build.properties")

        buildProperties.withWriter { writer ->
            def properties = new Properties()
            properties['id'] = UUID.randomUUID().toString()
            properties['timestamp'] = Instant.now().toString()
            properties['version'] = project.version.toString()
            properties.store(writer, 'Build properties')
        }
    }
}

classes {

    dependsOn createProperties
}

repositories {

    jcenter()
}

dependencies {

    // @formatter:off (required to keep the list of dependencies as a table)

    compile         group: 'org.springframework.boot',  name: 'spring-boot-starter-web'

    compile         group: 'com.github.jknack',         name: 'handlebars',                     version: '4.0.6'
    compile         group: 'org.codehaus.groovy',       name: 'groovy-all',                     version: '2.5.0-beta-1'

    providedRuntime group: 'org.springframework.boot',  name: 'spring-boot-starter-tomcat'

    testCompile     group: 'org.springframework.boot',  name: 'spring-boot-starter-test'

    // @formatter:on
}
